#  1. Напишите программу на Python для создания набора. Перейти к редактору
#
# def set_create(arg1):
#     return set(arg1)
#
# print(set_create((1,2,3,4,5)))
#
# 2. Напишите программу Python для итерации по наборам. Перейти к редактору
#

# def iter_set(arg1):
#     for el in arg1:
#         print(el)
#
# iter_set((1,2,3,4,5))
#
# 3. Напишите программу на Python, чтобы добавить членов в набор. Перейти к редактору
#

# def set_add(arg1, elm):
#     arg1.add(elm)
#     return arg1
#
# print(set_add({1,2,3,4,5},6))
#
# 4. Напишите программу на Python для удаления элементов из набора. Перейти в редактор
#

# def set_del(arg1, elm):
#     arg1.remove(elm)
#     return arg1
#
# print(set_del({1,2,3,4,5},2))
#
# 5. Напишите программу на Python для удаления элемента из набора, если он присутствует в наборе. Перейти к редактору
#
# def set_del(arg1, elm):
#     arg1.discard(elm)
#     return arg1
#
# print(set_del({1,2,3,4,5},2))
#
# 6. Напишите программу на Python для создания пересечения множеств. Перейти к редактору
#

# set_a = {1,2,3,4,7}
# set_b = {4,5,6,8,2}
# set_a.intersection_update(set_a,set_b)
# print(set_a)
#
# 7. Напишите программу на Python для создания объединения множеств. Перейти к редактору
#
# set_a = {1,2,3,7}
# set_b = {4,5,6,8}
# set_a.update(set_a,set_b)
# print(set_a)

# 8. Напишите программу на Python, чтобы создать разницу между наборами. Перейти к редактору
#
# set_a = {1, 2, 3, 7}
# set_b = {4, 5, 6, 8}
# res = set_a ^ set_b
# print(res)

#
# 9. Напишите программу на Python для создания симметричной разницы. Перейти к редактору
#
# set_a = {1, 2, 3, 7}
# set_b = {4, 5, 6, 8}
# set_a.symmetric_difference_update(set_b)
# print(set_a)
#
# 10. Напишите программу на Python для issubset и issperset. Перейти к редактору
#
# set_a = {1, 2, 3, 7}
# set_b = {4, 5, 6, 8}
# res = set_a <= set_b
# res1 = set_a >= set_b
# print(res,res1)
#
# 11. Напишите программу на Python для создания поверхностной копии наборов. Перейти к редактору
#
# Примечание. Мелкая копия - побитовая копия объекта. Создается новый объект, который имеет точную копию значений в исходном объекте.
#
# set_a = {1, 2, 3, 7}
# res = set_a.copy()
#
# print(res)
#
# 12. Напишите программу на Python для очистки набора. Перейти к редактору
#
# set_a = {1, 2, 3, 7}
# res = set_a.clear()
#
# print(res)
#
# 13. Напишите программу на Python для использования с frozensets. Перейти к редактору
#
# set_a = {1, 2, 3, 7}
#
# res = frozenset(set_a)
#
# print(res)
# #
# 14. Напишите программу на Python, чтобы найти максимальное и минимальное значение в наборе. Перейти к редактору
#
# set_a = {1, 2,0, 3, 7}
# print(min(set_a))
# print(max(set_a))
#
# 15. Напишите программу на Python, чтобы найти длину набора. Перейти к редактору
#
#
# set_a = {1, 2,0, 3, 7}
# print(len(set_a))